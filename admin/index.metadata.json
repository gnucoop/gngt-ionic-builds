{"__symbolic":"module","version":4,"metadata":{"AdminModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":36,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":38,"character":4},{"__symbolic":"reference","module":"@gngt/core/admin","name":"GngtAdminModule","line":39,"character":4},{"__symbolic":"reference","module":"@gic/angular","name":"GicModule","line":40,"character":4},{"__symbolic":"reference","module":"@gngt/core/common","name":"CommonModule","line":41,"character":4},{"__symbolic":"reference","module":"@ionic/angular","name":"IonicModule","line":42,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":43,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":44,"character":4},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":45,"character":4}],"declarations":[{"__symbolic":"reference","name":"AdminEditComponent"},{"__symbolic":"reference","name":"AdminListComponent"},{"__symbolic":"reference","name":"Éµgc_gngt_src_ionic_admin_admin_a"}],"exports":[{"__symbolic":"reference","name":"AdminEditComponent"},{"__symbolic":"reference","name":"AdminListComponent"}],"providers":[{"__symbolic":"reference","name":"AdminUserInteractionsService"}]}]}],"members":{}},"AdminUserInteractionsService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminUserInteractionsService","line":30,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":29,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ionic/angular","name":"AlertController","line":31,"character":30},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":31,"character":60}]}],"askDeleteConfirm":[{"__symbolic":"method"}]}},"AdminEditComponent":{"__symbolic":"class","arity":3,"extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminEditComponent","line":43,"character":53},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"gngt-admin-edit","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":38,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":39,"character":17},"member":"None"},"template":"<ion-card *ngIf=\"form|async as editForm\">\n  <ion-card-header>\n    <ion-card-title>\n      {{ title }}\n      <span *ngIf=\"editForm!.value.id\">#{{ editForm!.value.id }}</span>\n    </ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <div [formGroup]=\"editForm!\" [gngtFormDisabled]=\"(loading|async) === true\">\n      <ng-content select=\"[gngtAdminEditFormHeader]\"></ng-content>\n      <ion-list>\n        <ng-container *ngFor=\"let field of fields\">\n          <ng-container *ngIf=\"!field.hidden\">\n            <ng-container [ngSwitch]=\"field.type\">\n              <ion-item *ngSwitchCase=\"'input'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <ion-input [formControlName]=\"field.name\" [type]=\"field.subtype|gngtInputType\"\n                    [readonly]=\"field.readonly === true\"></ion-input>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'textarea'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <ion-textarea [formControlName]=\"field.name\"></ion-textarea>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'checkbox'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <ion-checkbox slot=\"start\" [formControlName]=\"field.name\"></ion-checkbox>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'radio'\">\n                <ion-label class=\"gngt-radio-label\">{{ field.label | translate }}</ion-label>\n                <div class=\"gngt-radio-container\">\n                  <ion-radio-group [formControlName]=\"field.name\">\n                    <div *ngFor=\"let choice of field.choices|gngtChoices\">\n                      <ion-radio [value]=\"choice.value\"></ion-radio>\n                      <ion-label>{{ choice.label }}</ion-label>\n                    </div>\n                  </ion-radio-group>\n                </div>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'select'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <ion-select [formControlName]=\"field.name\">\n                  <ion-select-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                      [value]=\"choice.value\">{{ choice.label }}</ion-select-option>\n                </ion-select>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'multipleselect'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <ion-select [formControlName]=\"field.name\" [multiple]=\"true\">\n                  <ion-select-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                      [value]=\"choice.value\">{{ choice.label }}</ion-select-option>\n                </ion-select>\n              </ion-item>\n              <ion-item *ngSwitchCase=\"'autocomplete'\">\n                <ion-label>{{ field.label | translate }}</ion-label>\n                <gic-autocomplete [formControlName]=\"field.name\">\n                  <gic-autocomplete-option\n                      *ngFor=\"let choice of field.choices|gngtChoices\">{{ choice.label }}</gic-autocomplete-option>\n                </gic-autocomplete>\n              </ion-item>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </ion-list>\n      <ng-content select=\"[gngtAdminEditFormFooter]\"></ng-content>\n    </div>\n    <div class=\"ion-actions\">\n      <ion-spinner *ngIf=\"loading|async\"></ion-spinner>\n      <ion-button (click)=\"save()\" [disabled]=\"(canSave === false) || !(editForm!.valid)\">{{ saveLabel | translate }}</ion-button>\n      <ion-button (click)=\"goBack()\" color=\"warning\">{{ cancelLabel | translate }}</ion-button>\n    </div>\n  </ion-card-content>\n</ion-card>\n","styles":["gngt-admin-edit{display:block}gngt-admin-edit>ion-card>ion-card-header{margin:-24px -24px 48px;padding:24px;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}gngt-admin-edit>ion-card>ion-card-content .gngt-radio-label{flex:0 1 auto;max-width:200px}gngt-admin-edit>ion-card>ion-card-content .gngt-radio-container{display:inline-block;flex:1 1 auto}gngt-admin-edit>ion-card>ion-card-content .gngt-radio-container ion-radio-group{display:inline-block}gngt-admin-edit>ion-card>ion-card-content .gngt-radio-container ion-radio-group>div{display:inline-flex !important;align-items:center;position:relative;padding-left:8px;margin-right:.5em}gngt-admin-edit>ion-card>ion-card-content .gngt-radio-container ion-radio-group>div>ion-label,gngt-admin-edit>ion-card>ion-card-content .gngt-radio-container ion-radio-group>div>ion-radio{display:inline-block !important;margin-right:.5em}gngt-admin-edit>ion-card>ion-card-content>.ion-actions{text-align:right}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":44,"character":19},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":44,"character":42},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":44,"character":63}]}]}},"AdminListComponent":{"__symbolic":"class","arity":4,"extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminListComponent","line":51,"character":4},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":40,"character":1},"arguments":[{"selector":"gngt-admin-list","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":44,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":45,"character":17},"member":"None"},"template":"<div>\n  <ion-card>\n    <ion-card-content>\n      <ion-content>\n        <ion-virtual-scroll [items]=\"items\">\n          <ion-item *virtualItem=\"let item\">\n            {{ item|json }}\n          </ion-item>\n        </ion-virtual-scroll>\n        <ion-infinite-scroll *ngIf=\"hasMore\" threshold=\"100px\" (ionInfinite)=\"loadMore()\">\n          <ion-infinite-scroll-content loadingSpinner=\"bubbles\">\n          </ion-infinite-scroll-content>\n        </ion-infinite-scroll>\n      </ion-content>\n    </ion-card-content>\n  </ion-card>\n</div>\n<!-- <mat-card>\n  <h2 mat-card-header>{{ title }}</h2>\n  <button [routerLink]=\"baseEditUrl + newItemPath\" mat-mini-fab color=\"primary\">\n    <mat-icon>add</mat-icon>\n  </button>\n  <mat-card-content>\n    <mat-toolbar>\n      <div class=\"gngt-actions\">\n        <mat-select #actionSel [disabled]=\"!selection.hasValue()\" [placeholder]=\"'Action' | translate\">\n          <mat-option value=\"delete\">{{ 'Delete' | translate }}</mat-option>\n        </mat-select>\n        <span class=\"gngt-spacer\"></span>\n        <button mat-raised-button [disabled]=\"!actionSel.value\"\n            (click)=\"processAction(actionSel.value)\">{{ 'Apply' | translate }}</button>\n      </div>\n      <span class=\"gngt-filler\"></span>\n      <mat-paginator [pageSizeOptions]=\"[20, 50, 100]\" showFirstLastButtons></mat-paginator>\n    </mat-toolbar>\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td class=\"gngt-select\" mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container *ngFor=\"let header of headers\"\n          [matColumnDef]=\"header.column\">\n        <ng-container *ngIf=\"header.sortable; else notSortable\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ header.label | translate }}</th>\n        </ng-container>\n        <ng-template #notSortable>\n          <th mat-header-cell *matHeaderCellDef>{{ header.label | translate }}</th>\n        </ng-template>\n        <td [routerLink]=\"baseEditUrl + element.id\" mat-cell *matCellDef=\"let element\">{{ element[header.column] }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-card-content>\n</mat-card> -->\n","styles":["gngt-admin-list{display:block;position:relative}gngt-admin-list>div{height:100%}gngt-admin-list>div>ion-card{height:calc(100% - 20px)}gngt-admin-list>div>ion-card>ion-card-content{height:100%}\n"]}]}],"members":{"baseQueryParams":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"infiniteScroll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":53,"character":3},"arguments":[{"__symbolic":"reference","module":"@ionic/angular","name":"IonInfiniteScroll","line":53,"character":13}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":68,"character":19},{"__symbolic":"reference","name":"AdminUserInteractionsService"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getSelection":[{"__symbolic":"method"}],"getItems":[{"__symbolic":"method"}],"clearSelection":[{"__symbolic":"method"}],"selectAll":[{"__symbolic":"method"}],"refreshList":[{"__symbolic":"method"}],"loadMore":[{"__symbolic":"method"}],"_loadList":[{"__symbolic":"method"}]}},"Éµgc_gngt_src_ionic_admin_admin_a":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":27,"character":1},"arguments":[{"name":"gngtInputType"}]}],"members":{"transform":[{"__symbolic":"method"}]}}},"origins":{"AdminModule":"./admin-module","AdminUserInteractionsService":"./admin-user-interactions","AdminEditComponent":"./edit","AdminListComponent":"./list","Éµgc_gngt_src_ionic_admin_admin_a":"./input-type-pipe"},"importAs":"@gngt/ionic/admin"}